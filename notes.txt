// TASK: Initialize firebase project
Step 1: Create new project at firebase.com
Step 2: If using firestore, create new Cloud Firestore database on step 1 project - set in production mode;
Step 3: create project folder on local system
step 5: run >firebase init 
  5a. Select services; Firestore, Functions, Hosting
  5b. Select Default for rules and indexes files, use Javascript for functions language.
  5c. If ESLint, select eslint 
  5d. Select Project name (if already created in step 1)
  5e. Install required npm modules
  5f. Select default deploy folder (public) and select as multipage app.

Step 6: Import firebase script url links in index.html - include scripts for sub-apps.

// TASK: run firebase dev server
> firebase serve

Learning Points
Firebase Cloud Functions can be triggered on different events (called triggers)
  Background Triggers - Must return a value/promise
  - Database events
  - Auth events
  - Storage Events 
  - Analytics Events

  HTTP Triggers - Must return value/response object
  - endpoint request - returns response object
  - callable - returns a value

// SECTION: How to create and invoke a cloud function 
Step 1: create function in FILE: functions/index.js by writing function code, save file 
Step 2: deploy function using the task below
// TASK: Deploy firebase functions only 
> firebase deploy --only functions
Step 3: Go to functions section of firebase project details to see deployed function and function uri (endpoint);
Step 4: You can test funtion in web browser by using enpoint. (for enpoint requests)
Step 5: You can check request logs in firebase console > function > logs, and you can log to the console log just by using regular console.log. 

Notes; https.onCall returns return object/value, while https.onRequest returns response object 